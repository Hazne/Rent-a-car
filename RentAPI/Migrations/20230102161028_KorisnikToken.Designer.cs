// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentAPI.Data;

#nullable disable

namespace RentAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230102161028_KorisnikToken")]
    partial class KorisnikToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RentAPI.Models.Automobil", b =>
                {
                    b.Property<int>("AutomobilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutomobilId"), 1L, 1);

                    b.Property<int>("BrojAutomobila")
                        .HasColumnType("int");

                    b.Property<int>("BrojSjedala")
                        .HasColumnType("int");

                    b.Property<double>("CijenaPoDanu")
                        .HasColumnType("float");

                    b.Property<DateTime>("DatumProizvodnje")
                        .HasColumnType("datetime2");

                    b.Property<int>("IzdavacId")
                        .HasColumnType("int");

                    b.Property<string>("Kolometraza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelAutomobilaId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tablice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipAutomobilaId")
                        .HasColumnType("int");

                    b.Property<int>("TipGorivaId")
                        .HasColumnType("int");

                    b.Property<string>("Vuca")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutomobilId");

                    b.HasIndex("IzdavacId");

                    b.HasIndex("ModelAutomobilaId");

                    b.HasIndex("TipAutomobilaId");

                    b.HasIndex("TipGorivaId");

                    b.ToTable("Automobils");
                });

            modelBuilder.Entity("RentAPI.Models.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradId"), 1L, 1);

                    b.Property<string>("ImeGrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiKod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.ToTable("Grads");
                });

            modelBuilder.Entity("RentAPI.Models.Izdavac", b =>
                {
                    b.Property<int>("IzdavacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzdavacId"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojMobitela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("ImeIzdavaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrijemeOtvaranja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrijemeZatvaranja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IzdavacId");

                    b.HasIndex("GradId");

                    b.ToTable("Izdavacs");
                });

            modelBuilder.Entity("RentAPI.Models.Komentar", b =>
                {
                    b.Property<int>("KomentarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KomentarId"), 1L, 1);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKomentara")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KomentarId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Komentars");
                });

            modelBuilder.Entity("RentAPI.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"), 1L, 1);

                    b.Property<string>("BrojMobitela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipKorisnikaId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.HasIndex("TipKorisnikaId");

                    b.ToTable("Korisniks");
                });

            modelBuilder.Entity("RentAPI.Models.ModelAutomobila", b =>
                {
                    b.Property<int>("ModelAutomobilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelAutomobilaId"), 1L, 1);

                    b.Property<string>("ImeModela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("ModelAutomobilaId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("ModelAutomobilas");
                });

            modelBuilder.Entity("RentAPI.Models.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaId"), 1L, 1);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<int>("BrojOcjene")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOcjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Ocjenas");
                });

            modelBuilder.Entity("RentAPI.Models.Proizvodjac", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProizvodjacId"), 1L, 1);

                    b.Property<string>("ImeProizvodjaca")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjacs");
                });

            modelBuilder.Entity("RentAPI.Models.Rezervisanje", b =>
                {
                    b.Property<int>("RezervisanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervisanjeId"), 1L, 1);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool?>("StatusKomentara")
                        .HasColumnType("bit");

                    b.Property<bool?>("StatusOcjene")
                        .HasColumnType("bit");

                    b.HasKey("RezervisanjeId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rezervisanjes");
                });

            modelBuilder.Entity("RentAPI.Models.TipAutomobila", b =>
                {
                    b.Property<int>("TipAutomobilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipAutomobilaId"), 1L, 1);

                    b.Property<string>("ImeTipa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipAutomobilaId");

                    b.ToTable("TipAutomobilas");
                });

            modelBuilder.Entity("RentAPI.Models.TipGoriva", b =>
                {
                    b.Property<int>("TipGorivaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipGorivaId"), 1L, 1);

                    b.Property<string>("ImeGoriva")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipGorivaId");

                    b.ToTable("TipGorivas");
                });

            modelBuilder.Entity("RentAPI.Models.TipKorisnika", b =>
                {
                    b.Property<int>("TipKorisnikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipKorisnikaId"), 1L, 1);

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipKorisnikaId");

                    b.ToTable("TipKorisnikas");
                });

            modelBuilder.Entity("RentAPI.Models.Automobil", b =>
                {
                    b.HasOne("RentAPI.Models.Izdavac", "Izdavac")
                        .WithMany()
                        .HasForeignKey("IzdavacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.ModelAutomobila", "ModelAutomobila")
                        .WithMany()
                        .HasForeignKey("ModelAutomobilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.TipAutomobila", "TipAutomobila")
                        .WithMany()
                        .HasForeignKey("TipAutomobilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.TipGoriva", "TipGoriva")
                        .WithMany()
                        .HasForeignKey("TipGorivaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Izdavac");

                    b.Navigation("ModelAutomobila");

                    b.Navigation("TipAutomobila");

                    b.Navigation("TipGoriva");
                });

            modelBuilder.Entity("RentAPI.Models.Izdavac", b =>
                {
                    b.HasOne("RentAPI.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("RentAPI.Models.Komentar", b =>
                {
                    b.HasOne("RentAPI.Models.Automobil", "Automobil")
                        .WithMany()
                        .HasForeignKey("AutomobilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automobil");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("RentAPI.Models.Korisnik", b =>
                {
                    b.HasOne("RentAPI.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.TipKorisnika", "TipKorisnika")
                        .WithMany()
                        .HasForeignKey("TipKorisnikaId");

                    b.Navigation("Grad");

                    b.Navigation("TipKorisnika");
                });

            modelBuilder.Entity("RentAPI.Models.ModelAutomobila", b =>
                {
                    b.HasOne("RentAPI.Models.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacId");

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("RentAPI.Models.Ocjena", b =>
                {
                    b.HasOne("RentAPI.Models.Automobil", "Automobil")
                        .WithMany()
                        .HasForeignKey("AutomobilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automobil");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("RentAPI.Models.Rezervisanje", b =>
                {
                    b.HasOne("RentAPI.Models.Automobil", "Automobil")
                        .WithMany()
                        .HasForeignKey("AutomobilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAPI.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automobil");

                    b.Navigation("Korisnik");
                });
#pragma warning restore 612, 618
        }
    }
}
